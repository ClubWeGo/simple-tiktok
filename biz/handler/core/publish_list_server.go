// Code generated by hertz generator.

package core

import (
	"context"

	core "github.com/ClubWeGo/simple-tiktok/biz/model/core"
	"github.com/ClubWeGo/simple-tiktok/kitex_server"
	"github.com/ClubWeGo/simple-tiktok/tools"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PublishListMethod .
// @router /douyin/publish/list/ [GET]
func PublishListMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core.PublishListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// 测试app中发现，所有的用户详情页都调用了该api
	// 但是文档要求此api校验用户token权限
	// 所以现在的效果是只有登录用户可以看到自己的发布列表

	resp := new(core.PublishListResp)

	ifValid, userid, err := tools.ValidateToken(req.Token) // 此接口token为必须字段，所以不需要验证是否为空
	if err != nil {
		msgFailed := "非法Token"
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	} // 文档要求登录用户查询发布列表，故这里需要鉴权限
	if !ifValid {
		// 非法token
		msgFailed := "无效Token"
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	}
	if userid != req.UserID { // UserID为必须字段，所以不需要验证是否为空
		msgFailed := "你没有权限访问，当前api仅用户本人可见"
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	}

	msgsucceed := "获取用户视频列表成功"
	msgFailed := "获取用户视频列表失败"

	videolist, err := kitex_server.GetVideosByAuthorId(req.UserID)
	if err != nil {
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	}
	resp.VideoList = videolist
	resp.StatusMsg = &msgsucceed
	c.JSON(consts.StatusOK, resp)
}
