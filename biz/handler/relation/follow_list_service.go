// Code generated by hertz generator.

package relation

import (
	"context"
	relation "github.com/ClubWeGo/simple-tiktok/biz/model/relation"
	"github.com/ClubWeGo/simple-tiktok/kitex_server"
	"github.com/ClubWeGo/simple-tiktok/tools"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// FollowListMethod .
// @router /douyin/relation/follow/list/ [GET]
func FollowListMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req relation.FollowListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(relation.FollowListResp)

	// 鉴权
	ifvalid, myUid, err := tools.ValidateToken(req.Token)
	if err != nil {
		msgFailed := "非法token"
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	}
	if !ifvalid {
		msgFailed := "token无效"
		resp.StatusCode = 1
		resp.StatusMsg = &msgFailed
		c.JSON(consts.StatusOK, resp)
		return
	}

	followList, err := kitex_server.GetFollowList(myUid, req.UserID)
	if err != nil {
		errMsg := err.Error()
		resp.StatusCode = 1
		resp.StatusMsg = &errMsg
		c.JSON(consts.StatusOK, resp)
		return
	}

	resp.UserList = followList
	c.JSON(consts.StatusOK, resp)
}
